variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test
  - deploy

# Templates
.run_build_template:
  image: node:10.10
  script:
    - yarn install
    - yarn build
    - echo "Preparing distribution version..."
  artifacts:
    paths:
      - ./build

.run_editor_deploy_template:
  image: python:latest
  dependencies:
    - run_build
  script:
    - pip install awscli
    - aws s3 sync ./build/ s3://app.lightbot.io --delete --debug
    - aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_EDITOR_INSTANCE_ID} --paths "/*"

# Smart jobs
run_build:
  stage: test
  extends: .run_build_template
  only:
    - master

run_editor_deploy:
  stage: deploy
  extends: .run_editor_deploy_template
  only:
    - master

# Manual jobs
run_manual_build:
  extends: .run_build_template
  when: manual

run_manual_editor_deploy:
  stage: deploy
  extends: .run_editor_deploy_template
  when: manual

# Docker build
run_docker_build:
  stage: deploy
  image: docker
  services:
    - docker:dind
  only:
    - staging
  variables:
    REACT_APP_API_URL: $PROD_REACT_APP_API_URL
    REACT_APP_WIDGET_URL: $PROD_REACT_APP_WIDGET_URL
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - printenv | grep -i "react_app_" >> .env.production
    - docker build -t ${CI_REGISTRY}/lightbase/lightbot-editor:latest -t ${CI_REGISTRY}/lightbase/lightbot-editor:$CI_COMMIT_SHA .
    - docker push ${CI_REGISTRY}/lightbase/lightbot-editor:latest
    - docker push ${CI_REGISTRY}/lightbase/lightbot-editor:$CI_COMMIT_SHA

